{"version":3,"file":"1-timer-12b5be8c.js","sources":["../../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst inputEl = document.querySelector('#datetime-picker');\nconst btnEl = document.querySelector('button');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nlet userSelectedDate;\nlet intervalId = null;\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24; // Remaining days\n\n  const days = Math.floor(ms / day); // Remaining hours\n  const hours = Math.floor((ms % day) / hour); // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute); // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0].getTime() < options.defaultDate.getTime()) {\n      iziToast.show({\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n        backgroundColor: '#EF4040',\n        messageColor: '#ffffff',\n      });\n      btnEl.disabled = true;\n    } else {\n      btnEl.disabled = false;\n      userSelectedDate = selectedDates[0];\n      console.log(userSelectedDate);\n    }\n  },\n};\n\nflatpickr(inputEl, options);\n\nfunction resalt() {\n  const deltaTime = userSelectedDate.getTime() - Date.now();\n  console.log(deltaTime);\n  if (deltaTime > 0) {\n    daysEl.textContent = addLeadingZero(convertMs(deltaTime).days);\n    hoursEl.textContent = addLeadingZero(convertMs(deltaTime).hours);\n    minutesEl.textContent = addLeadingZero(convertMs(deltaTime).minutes);\n    secondsEl.textContent = addLeadingZero(convertMs(deltaTime).seconds);\n  } else {\n    clearInterval(intervalId);\n  }\n}\nfunction handleClick() {\n  btnEl.disabled = true;\n  inputEl.disabled = true;\n  resalt();\n  intervalId = setInterval(() => resalt(), 1000);\n}\nbtnEl.addEventListener('click', handleClick);\n"],"names":["inputEl","btnEl","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","intervalId","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","options","selectedDates","iziToast","flatpickr","resalt","deltaTime","handleClick"],"mappings":"2CAMA,MAAMA,EAAU,SAAS,cAAc,kBAAkB,EACnDC,EAAQ,SAAS,cAAc,QAAQ,EACvCC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzD,IAAIC,EACAC,EAAa,KAEjB,SAASC,EAAUC,EAAI,CAOrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,EAAE,QAAS,EAAGD,EAAQ,YAAY,WACnDE,EAAS,KAAK,CACZ,QAAS,qCACT,SAAU,WACV,gBAAiB,UACjB,aAAc,SACtB,CAAO,EACDjB,EAAM,SAAW,KAEjBA,EAAM,SAAW,GACjBK,EAAmBW,EAAc,CAAC,EAClC,QAAQ,IAAIX,CAAgB,EAE/B,CACH,EAEAa,EAAUnB,EAASgB,CAAO,EAE1B,SAASI,GAAS,CAChB,MAAMC,EAAYf,EAAiB,QAAS,EAAG,KAAK,IAAG,EACvD,QAAQ,IAAIe,CAAS,EACjBA,EAAY,GACdnB,EAAO,YAAcY,EAAeN,EAAUa,CAAS,EAAE,IAAI,EAC7DlB,EAAQ,YAAcW,EAAeN,EAAUa,CAAS,EAAE,KAAK,EAC/DjB,EAAU,YAAcU,EAAeN,EAAUa,CAAS,EAAE,OAAO,EACnEhB,EAAU,YAAcS,EAAeN,EAAUa,CAAS,EAAE,OAAO,GAEnE,cAAcd,CAAU,CAE5B,CACA,SAASe,GAAc,CACrBrB,EAAM,SAAW,GACjBD,EAAQ,SAAW,GACnBoB,IACAb,EAAa,YAAY,IAAMa,EAAQ,EAAE,GAAI,CAC/C,CACAnB,EAAM,iBAAiB,QAASqB,CAAW"}